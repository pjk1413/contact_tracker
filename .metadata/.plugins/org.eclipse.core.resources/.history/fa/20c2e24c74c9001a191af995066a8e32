package com.kramer.contactTracker.controller;

import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.kramer.contactTracker.models.Contact;
import com.kramer.contactTracker.models.User;
import com.kramer.contactTracker.repo.UserRepo;

@CrossOrigin(origins = "http://localhost:3000") //not for deployment
@RestController
@RequestMapping("/user")
public class UserController {
	
	@Autowired
	private UserRepo userRepo;
	
	@PostMapping("/register")
	public User register(@RequestBody User user) {
		return userRepo.save(user);
	}
	
	@PostMapping("/login")
	public Long login(@RequestParam String email, @RequestParam String password) {
		
		if(userRepo.login(email, password) != null) {
			//Current token is the user id, will need to have more data transfered over
			return userRepo.findByEmail(email).get().getId();
		} else {
			//Return of -1 means that the password or email was incorrect
			return (long) -1;
		}
	}
	
	@PostMapping("/password")
	public String changePassword(@RequestParam String email, @RequestParam String password) {
		return null;
	}
	
	@PostMapping("/email")
	public void changeEmail(@RequestBody User user) {
		
		userRepo.findById(user.getId()).ifPresent(editUser -> {
			editUser.setEmail(user.getEmail());
		});
	}
	
	@PostMapping("/addContact")
	public void addContact(@RequestBody Contact contact, @RequestParam Long id) {
		userRepo.findById(id).ifPresent(user -> {
			user.addContact(contact);
		});
	}
	
	@PostMapping("/removeContact")
	public void removeContact(@RequestBody Contact contact, @RequestParam Long id) {
		userRepo.findById(id).ifPresent(user -> {
			user.removeContact(contact);
		});
	}

}
